{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\source\\\\repos\\\\LICENTA\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    getProfileById,\n    profile: {\n      profile,\n      loading\n    },\n    auth,\n    match\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back to profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: /*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-exp bg-white p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-primary\",\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n            experience: experience\n          }, experience._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No experience credentials!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-edu bg-white p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-primary\",\n          children: \"Education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n            education: education\n          }, education._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No education credentials!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/crist/source/repos/LICENTA/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","useParams","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","Profile","profile","loading","auth","match","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getProfileById(id);\r\n  }, [getProfileById, id]);\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back to profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n          </div>\r\n          <div className='profile-grid my-1'>\r\n            <ProfileAbout profile={profile} />\r\n          </div>\r\n          <div className='profile-exp bg-white p-2'>\r\n            <h2 className='text-primary'>Experience</h2>\r\n            {profile.experience.length > 0 ? (\r\n              <Fragment>\r\n                {profile.experience.map((experience) => (\r\n                  <ProfileExperience\r\n                    key={experience._id}\r\n                    experience={experience}\r\n                  />\r\n                ))}\r\n              </Fragment>\r\n            ) : (\r\n              <h4>No experience credentials!</h4>\r\n            )}\r\n          </div>\r\n\r\n          <div className='profile-edu bg-white p-2'>\r\n            <h2 className='text-primary'>Education</h2>\r\n            {profile.education.length > 0 ? (\r\n              <Fragment>\r\n                {profile.education.map((education) => (\r\n                  <ProfileEducation key={education._id} education={education} />\r\n                ))}\r\n              </Fragment>\r\n            ) : (\r\n              <h4>No education credentials!</h4>\r\n            )}\r\n          </div>\r\n\r\n          {profile.githubusername && <ProfileGithub />}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}