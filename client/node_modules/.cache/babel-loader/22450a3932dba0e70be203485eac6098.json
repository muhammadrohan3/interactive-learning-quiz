{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\source\\\\repos\\\\LICENTA\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    getProfileById,\n    profile: {\n      profile,\n      loading\n    },\n    auth,\n    match\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/crist/source/repos/LICENTA/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","useParams","connect","Spinner","getProfileById","Profile","profile","loading","auth","match","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,OAAO,GAAG,QAKV;AAAA;;AAAA,MALW;AACfD,IAAAA,cADe;AAEfE,IAAAA,OAAO,EAAE;AAAEA,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAFM;AAGfC,IAAAA,IAHe;AAIfC,IAAAA;AAJe,GAKX;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAST,SAAS,EAAxB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc,CAACM,EAAD,CAAd;AACD,GAFQ,EAEN,CAACN,cAAD,EAAiBM,EAAjB,CAFM,CAAT;AAGA,sBACE,QAAC,QAAD;AAAA,cACGJ,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA9B,gBAA4C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD/C;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfD;;GAAMF,O;UAMWJ,S;;;KANXI,O;AAiBNA,OAAO,CAACM,SAAR,GAAoB;AAClBP,EAAAA,cAAc,EAAEL,SAAS,CAACa,IAAV,CAAeC,UADb;AAElBP,EAAAA,OAAO,EAAEP,SAAS,CAACe,MAAV,CAAiBD,UAFR;AAGlBL,EAAAA,IAAI,EAAET,SAAS,CAACe,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADmB;AAElCE,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFsB,CAAZ,CAAxB;;AAKA,eAAeN,OAAO,CAACa,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getProfileById(id);\r\n  }, [getProfileById, id]);\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? <Spinner /> : <Fragment>Profile</Fragment>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n"]},"metadata":{},"sourceType":"module"}