{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\Desktop\\\\LIC30\\\\abc\\\\client\\\\src\\\\components\\\\post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport { getPost } from '../../actions/post';\nimport { Link, useParams } from 'react-router-dom';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    getPost,\n    post: {\n      post,\n      loading\n    }\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getPost(id);\n  }, [getPost, id]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      className: \"btn\",\n      children: \"Back to Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      showActions: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/crist/Desktop/LIC30/abc/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","getPost","Link","useParams","CommentForm","Post","post","loading","id","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,IAAI,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEJ,IAAAA,OAAF;AAAWK,IAAAA,IAAI,EAAE;AAAEA,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAjB,GAAyC;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACO,EAAD,CAAP;AACD,GAFQ,EAEN,CAACP,OAAD,EAAUO,EAAV,CAFM,CAAT;AAIA,SAAOD,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAWD,CAjBD;;GAAMJ,I;UACWF,S;;;KADXE,I;AAmBNA,IAAI,CAACK,SAAL,GAAiB;AACfT,EAAAA,OAAO,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UADT;AAEfN,EAAAA,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAsCI,IAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst Post = ({ getPost, post: { post, loading } }) => {\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getPost(id);\r\n  }, [getPost, id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back to Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n"]},"metadata":{},"sourceType":"module"}